[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "ml_examples"
version = "0.0.1"
authors = [ { name="Example Author", email="author@example.com" }, ]
description = "Example Python code for machine learning"
readme = "README.md"
requires-python = ">=3.9"
dynamic = [ "dependencies", "optional-dependencies" ]
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]

# https://github.com/christian-oleary/ml-examples.git

# COVERAGE
[tool.coverage.run]
branch = true
[tool.coverage.report]
exclude_also = [ # Regexes for lines to exclude from consideration
    "def __repr__", "if self\\.debug",  # Don't complain about missing debug-only code
    "raise AssertionError", "raise NotImplementedError",  # Don't complain if tests don't hit defensive assertion code
    "if 0:", "if __name__ == .__main__.:",  # Don't complain if non-runnable code isn't run
    "@(abc\\.)?abstractmethod",  # Don't complain about abstract methods, they aren't run
]
ignore_errors = true
show_missing = true
fail_under = 10
[tool.coverage.html]
directory = "./docs/coverage_html_report"

# MYPY
[tool.mypy]
exclude = "repositories"

# PYLINT
[tool.pylint.'MASTER']
addopts = "--rcfile=.pylintrc"

# PYTEST
[tool.pytest.ini_options]
# addopts = "-ra --cov --cov-append --cov-report=term-missing"
addopts = "-ra"
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
console_output_style = "progress"
filterwarnings = "ignore::DeprecationWarning"
testpaths = [ "tests" ]

# Tox
[tool.tox]
legacy_tox_ini = """
    [tox]
    requires = tox>=4
    # env_list = lint, type, py{39,310,311}, report
    env_list = lint

    # [testenv]
    # commands = coverage erase; pytest
    # deps = coverage, gitpython, pytest, pytest-cov

    # [testenv:report]
    # deps = coverage
    # commands = coverage html; coverage report --fail-under=10; coverage erase

    [testenv:lint]
    deps = pylint
    commands = pylint examples

    # [testenv:type]
    # deps = mypy>=0.991
    # commands = python -m mypy {posargs:examples tests}
"""
