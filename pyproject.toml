[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "ml_examples"
authors = [ { name="Christian O'Leary", email="christian.oleary@mtu.com" }, ]
description = "Example Python code for machine learning"
readme = "README.md"
requires-python = ">=3.10"
dynamic = [ "version", "dependencies", "optional-dependencies" ]
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]

# https://github.com/christian-oleary/ml-examples.git

################################################################################
# COVERAGE
[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_also = [ # Regexes for lines to exclude from consideration
    "def __repr__", "if self\\.debug",  # Don't complain about missing debug-only code
    "raise AssertionError", "raise NotImplementedError",  # Don't complain if tests don't hit defensive assertion code
    "if 0:", "if __name__ == .__main__.:",  # Don't complain if non-runnable code isn't run
    "@(abc\\.)?abstractmethod",  # Don't complain about abstract methods, they aren't run
]
ignore_errors = true
show_missing = true
fail_under = 90

[tool.coverage.html]
directory = "./docs/coverage_html_report"

################################################################################
# MYPY
[tool.mypy]
ignore_missing_imports = true
# exclude = "repositories"

################################################################################
# PYLINT
[tool.pylint.'MASTER']
addopts = "--rcfile=.pylintrc"

################################################################################
# PYTEST
[tool.pytest.ini_options]
addopts = "-ra --durations=0 --cov --cov-append --cov-report=term-missing"
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
console_output_style = "progress"
filterwarnings = "ignore::DeprecationWarning"
testpaths = [ "tests" ]

################################################################################
# TOX
[tool.tox]
legacy_tox_ini = """
    [tox]
    requires = tox>=4
    env_list = py{310}, report

    [testenv]
    commands = pytest
    skip_install = False
    deps = -r{toxinidir}/requirements.txt

    # [testenv:report]
    # commands = coverage html; coverage report --fail-under=2.0; coverage erase
    # deps = -r{toxinidir}/requirements.txt
"""

################################################################################
